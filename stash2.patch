diff --git a/docs/ptrace(2).md b/docs/ptrace(2).md
index e08ecefa..e59cc4b7 100644
--- a/docs/ptrace(2).md
+++ b/docs/ptrace(2).md
@@ -604,7 +604,7 @@ ptrace API는 <tt>[[waitpid(2)]]</tt>를 통한 표준 유닉스 부모/자식 
 :   (i386 한정) 디버그 레지스터 할당 내지 해제 중에 오류가 있었다.
 
 `EFAULT`
-:   추적자나 피추적자의 메모리 내의 유효하지 않은 영역에 대한 읽기나 쓰기 시도가 있었다. 아마 그 영역이 매핑 되어 있지 않거나 접근 가능하지 않아서일 것이다. 유감스럽게도 리눅스에서는 이 문제의 여러 변종들이 다소 임의적으로 `EIO`나 `EFAULT`를 반환한다.
+:   추적자나 피추적자의 메모리 내의 유효하지 않은 영역에 대한 읽기나 쓰기 시도가 있었다. 아마 그 영역이 매핑 되어 있지 않거나 접근 가능하지 않아서일 것이다. 불행히도 리눅스에서는 이 문제의 여러 변종들이 다소 임의적으로 `EIO`나 `EFAULT`를 반환한다.
 
 `EINVAL`
 :   유효하지 않은 옵션을 설정하려고 시도했다.
diff --git a/docs/seccomp(2).md b/docs/seccomp(2).md
index 90afc4ad..ed37965b 100644
--- a/docs/seccomp(2).md
+++ b/docs/seccomp(2).md
@@ -269,7 +269,7 @@ seccomp 필터가 반환할 수 있는 행위 값들을 우선도 역순으로 
 
 ### seccomp BPF 아키텍처 지원
 
-다음 아키텍처들에서 seccomp BPF 필터링 아키텍처 지원이 사용 가능하다.
+다음 아키텍처들에서 seccomp BPF 필터링 아키텍처 지원을 이용할 수 있다.
 
 * x86-64, i386, x32 (리눅스 3.5부터)
 * ARM (리눅스 3.8부터)
diff --git a/docs/stdarg(3).md b/docs/stdarg(3).md
index cbea3adc..cc97ed61 100644
--- a/docs/stdarg(3).md
+++ b/docs/stdarg(3).md
@@ -51,7 +51,7 @@ void va_copy(va_list dest, va_list src);
 va_list aq = ap;
 ```
 
-하지만 안타깝게도 `va_list`를 포인터의 (길이 1인) 배열로 만드는 시스템도 있으며, 거기선 다음과 같이 해야 한다.
+하지만 불행히도 `va_list`를 포인터의 (길이 1인) 배열로 만드는 시스템도 있으며, 거기선 다음과 같이 해야 한다.
 
 ```c
 va_list aq;
diff --git a/docs/vsock(7).md b/docs/vsock(7).md
index d1b4c39b..b9f319c8 100644
--- a/docs/vsock(7).md
+++ b/docs/vsock(7).md
@@ -106,7 +106,7 @@ struct sockaddr_vm {
 
 ## VERSIONS
 
-리눅스 3.9부터 VMware(VMCI) 지원을 이용 가능하다. 리눅스 4.8부터 KVM(virtio)을 지원한다. 리눅스 4.14부터 Hyper-V를 지원한다.
+리눅스 3.9부터 VMware(VMCI) 지원을 이용할 수 있다. 리눅스 4.8부터 KVM(virtio)을 지원한다. 리눅스 4.14부터 Hyper-V를 지원한다.
 
 리눅스 5.6부터 `VMADDR_CID_LOCAL`을 지원한다. 리눅스 5.6부터 게스트 및 호스트에서의 로컬 통신을 이용할 수 있다. 이전 버전에서는 게스트에서만 (호스트에서는 불가능), 그리고 일부 전송 방식(VMCI 및 virtio)으로만 로컬 통신을 지원했다.
 
